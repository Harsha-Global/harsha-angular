{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/components/about/about.component.html","webpack:///./src/app/admin/components/about/about.component.scss","webpack:///./src/app/admin/components/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/sign-up/sign-up.component.html","webpack:///./src/app/components/sign-up/sign-up.component.scss","webpack:///./src/app/components/sign-up/sign-up.component.ts","webpack:///./src/app/directives/alert.directive.ts","webpack:///./src/app/directives/client-location-status-validator.directive.ts","webpack:///./src/app/directives/component-loader.directive.ts","webpack:///./src/app/directives/project-idunique-validator.directive.ts","webpack:///./src/app/directives/repeater.directive.ts","webpack:///./src/app/directives/team-size-validator.directive.ts","webpack:///./src/app/employee/components/create-task/create-task.component.html","webpack:///./src/app/employee/components/create-task/create-task.component.scss","webpack:///./src/app/employee/components/create-task/create-task.component.ts","webpack:///./src/app/employee/components/edit-task/edit-task.component.html","webpack:///./src/app/employee/components/edit-task/edit-task.component.scss","webpack:///./src/app/employee/components/edit-task/edit-task.component.ts","webpack:///./src/app/employee/components/tasks/tasks.component.html","webpack:///./src/app/employee/components/tasks/tasks.component.scss","webpack:///./src/app/employee/components/tasks/tasks.component.ts","webpack:///./src/app/employee/components/update-task-status/update-task-status.component.html","webpack:///./src/app/employee/components/update-task-status/update-task-status.component.scss","webpack:///./src/app/employee/components/update-task-status/update-task-status.component.ts","webpack:///./src/app/employee/employee-routing/employee-routing.module.ts","webpack:///./src/app/employee/employee.module.ts","webpack:///./src/app/guards/can-activate-guard.service.ts","webpack:///./src/app/guards/can-deactivate-guard.service.ts","webpack:///./src/app/interceptors/jwt-interceptor.service.ts","webpack:///./src/app/interceptors/jwt-un-authorized-interceptor.service.ts","webpack:///./src/app/models/TaskStatusDetail.ts","webpack:///./src/app/models/login-view-model.ts","webpack:///./src/app/models/task.ts","webpack:///./src/app/my-animations.ts","webpack:///./src/app/pipes/filter.pipe.ts","webpack:///./src/app/pipes/number-to-words.pipe.ts","webpack:///./src/app/pipes/paging.pipe.ts","webpack:///./src/app/pipes/sort.pipe.ts","webpack:///./src/app/services/countries.service.ts","webpack:///./src/app/services/custom-validators.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/projects.service.ts","webpack:///./src/app/services/router-logger.service.ts","webpack:///./src/app/services/task-priorities.service.ts","webpack:///./src/app/services/task-statuses.service.ts","webpack:///./src/app/services/tasks.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAA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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>About</h1>\\n<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\\n<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\\n<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\\n<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBvbmVudHMvYWJvdXQvYWJvdXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules, NoPreloading } from '@angular/router';\nimport { AboutComponent } from \"./admin/components/about/about.component\";\nimport { LoginComponent } from './components/login/login.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { CanDeactivateGuardService } from './guards/can-deactivate-guard.service';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent, data: { linkIndex: 2 } },\n  { path: \"signup\", component: SignUpComponent, canDeactivate: [CanDeactivateGuardService], data: { linkIndex: 3 } },\n  { path: \"about\", component: AboutComponent, data: { linkIndex: 1 } },\n  { path: \"admin\", loadChildren: () => import(\"./admin/admin.module\").then(m => m.AdminModule) },\n  { path: \"employee\", loadChildren: () => import(\"./employee/employee.module\").then(m => m.EmployeeModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing: false, preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule\n{\n}\n\n","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-success navbar-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        Angular Task Manager\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#mynav\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"mynav\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n            <ng-container *ngIf=\\\"loginService.currentUserName != null && loginService.currentUserRole == 'Admin'\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\" [ '/admin', 'dashboard' ] \\\">Dashboard</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\" [ '/admin', 'projects' ] \\\">Projects</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\" [ '/admin', 'masters' ] \\\">Masters</a>\\n                </li>\\n            </ng-container>\\n\\n            <ng-container *ngIf=\\\"loginService.currentUserName != null && loginService.currentUserRole == 'Employee'\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\" [ '/employee', 'tasks' ] \\\">Tasks</a>\\n                </li>\\n            </ng-container>\\n\\n            <ng-container *ngIf=\\\"loginService.currentUserName == null\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\" [ '/login' ] \\\">Login</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\" [ '/signup' ] \\\">Sign Up</a>\\n                </li>\\n            </ng-container>\\n\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\" [ '/about' ] \\\">About</a>\\n            </li>\\n\\n            <ng-container *ngIf=\\\"loginService.currentUserName != null\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\" [ '/myprofile' ] \\\">{{loginService.currentUserName}}</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"loginService.Logout()\\\">Logout</a>\\n                </li>\\n            </ng-container>\\n        </ul>\\n\\n        <form class=\\\"form-inline my-2 my-lg-0\\\">\\n            <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"search\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n            </div>\\n            <button class=\\\"btn btn-warning my2- my-sm-0\\\" type=\\\"button\\\" (click)=\\\"onSearchClick()\\\">Search</button>\\n        </form>\\n    </div>\\n</nav>\\n\\n<div class=\\\"container-fluid\\\" [@routeAnimations]=\\\"getState(outlet)\\\">\\n    <router-outlet #outlet=\\\"outlet\\\"></router-outlet>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { RouterLoggerService } from './services/router-logger.service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { fadeAnimation, slideUpAnimation, zoomUpAnimation, zoomLeftAnimation, slideLeftOrRightAnimation, keyFrameAnimation } from \"./my-animations\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [ keyFrameAnimation ]\n})\nexport class AppComponent\n{\n  constructor(private loginService : LoginService, private domSanitizer : DomSanitizer, private routerLoggerService: RouterLoggerService, private router: Router)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.loginService.detectIfAlreadyLoggedIn();\n    \n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd)\n      {\n        let userName = (this.loginService.currentUserName)? this.loginService.currentUserName : \"anonymous\";\n        \n        let logMsg = new Date().toLocaleString() + \": \" + userName + \" navigates to \" + event.url;\n\n        this.routerLoggerService.log(logMsg).subscribe();\n      }\n    });\n  }\n  \n  onSearchClick()\n  {\n    console.log(this.loginService.currentUserName);\n  }\n\n  getState(outlet)\n  {\n    return outlet.isActivated? outlet.activatedRoute.snapshot.url[0].path && outlet.activatedRouteData[\"linkIndex\"] : \"none\";\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { JwtModule } from \"@auth0/angular-jwt\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { JwtInterceptorService } from './interceptors/jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './interceptors/jwt-un-authorized-interceptor.service';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { AlertDirective } from './directives/alert.directive';\nimport { RepeaterDirective } from './directives/repeater.directive';\nimport { EmployeeModule } from './employee/employee.module';\nimport { SharedModule } from './shared/shared.module';\nimport { AboutComponent } from './admin/components/about/about.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    LoginComponent,\n    SignUpComponent,\n    AlertDirective,\n    RepeaterDirective,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    AppRoutingModule,\n    EmployeeModule,\n    JwtModule.forRoot( {\n      config: {\n        tokenGetter: () => {\n          return (sessionStorage.getItem(\"currentUser\")? JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null)\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizedInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<form>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-xl-5 col-md-9 mx-auto\\\">\\n      <div class=\\\"card mt-4\\\">\\n        <div class=\\\"card-header bg-secondary text-white\\\">\\n          <h3>Login</h3>\\n          <div appAlert [error]=\\\"loginError\\\" *ngIf=\\\"loginError\\\"></div>\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group form-row\\\">\\n            <label for=\\\"UserName\\\" class=\\\"col-md-4 col-form-label\\\">Username</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"loginViewModel.UserName\\\" name=\\\"UserName\\\" autofocus=\\\"autofocus\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label for=\\\"Password\\\" class=\\\"col-md-4 col-form-label\\\">Password</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"loginViewModel.Password\\\" name=\\\"Password\\\">\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"card-footer text-right\\\">\\n          <!-- <span class=\\\"text-danger\\\">{{loginError}}&nbsp;</span> -->\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"onLoginClick($event)\\\">Login</button>\\n\\n          <!-- <div *appRepeater=\\\"5; let i\\\">\\n            <a class=\\\"btn btn-primary\\\" data-toggle=\\\"collapse\\\" [href]=\\\" '#collapse' + i \\\" role=\\\"button\\\">Show Details</a>\\n\\n            <div class=\\\"collapse\\\" [id]=\\\" 'collapse' + i\\\">\\n              <div class=\\\"card card-body\\\">\\n                Actual details here\\n              </div>\\n            </div>\\n          </div> -->\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../../models/login-view-model';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit\n{\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = \"\";\n\n  constructor(private loginService: LoginService, private router: Router) \n  {\n  }\n\n  ngOnInit()\n  {\n  }\n\n  onLoginClick(event)\n  {\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response) =>\n      {\n        if (this.loginService.currentUserRole == \"Admin\")\n        {\n          this.router.navigate([\"/admin\", \"dashboard\"]);\n        }\n        else\n        {\n          this.router.navigate([\"/employee\", \"tasks\"]);\n        }\n      },\n      (error) =>\n      {\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      },\n    );\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8 col-xl-6 mx-auto\\\">\\n\\n    <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"onSubmitClick()\\\">\\n\\n      <div class=\\\"card mt-1\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4>Sign Up</h4>\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n\\n          <div class=\\\"form-group form-row\\\" formGroupName=\\\"personName\\\">\\n            <label for=\\\"firstName\\\" class=\\\"col-md-4 col-form-label\\\">First Name:</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"text\\\" name=\\\"firstName\\\" id=\\\"firstName\\\" placeholder=\\\"First Name\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" [ngClass]=\\\"{\\n                'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted),\\n\\n                'is-valid': signUpForm.get('personName.firstName').valid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.required\\\">First name can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.minlength\\\">First name should contain at least 2 characters</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group form-row\\\" formGroupName=\\\"personName\\\">\\n            <label for=\\\"lastName\\\" class=\\\"col-md-4 col-form-label\\\">Last Name:</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"text\\\" name=\\\"lastName\\\" id=\\\"lastName\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" [ngClass]=\\\"{\\n                'is-invalid': signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted),\\n\\n                'is-valid': signUpForm.get('personName.lastName').valid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.required\\\">Last name can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.minlength\\\">Last name should contain at least 2 characters</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label for=\\\"email\\\" class=\\\"col-md-4 col-form-label\\\">Email:</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{\\n                'is-invalid': signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\\n\\n                'is-valid': signUpForm.get('email').valid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.required\\\">Email can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.email\\\">Email is invalid</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.uniqueEmail\\\">Email already exists</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label for=\\\"mobile\\\" class=\\\"col-md-4 col-form-label\\\">Mobile:</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"text\\\" name=\\\"mobile\\\" id=\\\"mobile\\\" placeholder=\\\"Mobile\\\" class=\\\"form-control\\\" formControlName=\\\"mobile\\\" [ngClass]=\\\"{\\n                'is-invalid': signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\\n\\n                'is-valid': signUpForm.get('mobile').valid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.required\\\">Mobile can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.pattern\\\">Mobile is invalid</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label for=\\\"dateOfBirth\\\" class=\\\"col-md-4 col-form-label\\\">Date of Birth:</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"date\\\" name=\\\"dateOfBirth\\\" id=\\\"dateOfBirth\\\" placeholder=\\\"Date of Birth\\\" class=\\\"form-control\\\" formControlName=\\\"dateOfBirth\\\" [ngClass]=\\\"{\\n                'is-invalid': signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted),\\n\\n                'is-valid': signUpForm.get('dateOfBirth').valid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.required\\\">Date of Birth can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.minAge\\\">Minimum Age must be 18</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label for=\\\"password\\\" class=\\\"col-md-4 col-form-label\\\">Password:</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{\\n                'is-invalid': signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\\n\\n                'is-valid': signUpForm.get('password').valid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) && signUpForm.get('password').errors?.required\\\">Password can't be blank</span>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label for=\\\"confirmPassword\\\" class=\\\"col-md-4 col-form-label\\\">Confirm Password:</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"password\\\" name=\\\"confirmPassword\\\" id=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{\\n                'is-invalid': signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted),\\n\\n                'is-valid': signUpForm.get('confirmPassword').valid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) && signUpForm.get('confirmPassword').errors?.required\\\">Confirm Password can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched || signUpForm.submitted) && signUpForm.errors?.compareValidator\\\">Password and Confirm Password do not match</span>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label class=\\\"col-md-4 col-form-label\\\">Gender:</label>\\n            <div class=\\\"col-md-8\\\">\\n\\n              <div class=\\\"form-check-label form-check-inline\\\" *ngFor=\\\"let gender of genders\\\">\\n                <input type=\\\"radio\\\" name=\\\"gender\\\" [id]=\\\"gender\\\" [value]=\\\"gender\\\" class=\\\"form-check-input\\\" formControlName=\\\"gender\\\">\\n                <label [for]=\\\"gender\\\" class=\\\"form-check-label\\\">{{gender}}</label>\\n              </div>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || signUpForm.submitted) && signUpForm.get('gender').errors?.required\\\">Please select gender</span>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label for=\\\"countryID\\\" class=\\\"col-md-4 col-form-label\\\">Country:</label>\\n            <div class=\\\"col-md-8\\\">\\n              <select name=\\\"countryID\\\" id=\\\"countryID\\\" class=\\\"form-control\\\" formControlName=\\\"countryID\\\" [ngClass]=\\\"{\\n                'is-invalid': signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\\n\\n                'is-valid': signUpForm.get('countryID').valid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) }\\\">\\n                <option value=\\\"null\\\">Please Select</option>\\n                <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.countryID\\\">\\n                  {{country.countryName}}\\n                </option>\\n              </select>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) && signUpForm.get('countryID').errors?.required\\\">Please select country</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label class=\\\"col-md-4 col-form-label\\\"></label>\\n            <div class=\\\"col-md-8\\\">\\n              <input type=\\\"checkbox\\\" name=\\\"receiveNewsLetters\\\" id=\\\"receiveNewsLetters\\\" value=\\\"true\\\" class=\\\"form-check-input\\\" formControlName=\\\"receiveNewsLetters\\\">\\n              <label for=\\\"receiveNewsLetters\\\" class=\\\"form-check-label\\\">Receive News Letters</label>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group form-row\\\">\\n            <label class=\\\"col-md-4 col-form-label\\\">Skills:</label>\\n            <div class=\\\"col-md-8\\\" formArrayName=\\\"skills\\\">\\n              <div class=\\\"row\\\" *ngFor=\\\"let skill of signUpForm.get('skills').controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n\\n                <div class=\\\"col-5\\\">\\n                  <input type=\\\"text\\\" name=\\\"skillName\\\" id=\\\"skillName\\\" placeholder=\\\"Skill Name\\\" formControlName=\\\"skillName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{\\n                    'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\\n    \\n                    'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted) }\\\">\\n                </div>\\n\\n                <div class=\\\"col-4\\\">\\n                  <select name=\\\"level\\\" id=\\\"level\\\" formControlName=\\\"level\\\" class=\\\"form-control\\\" [ngClass]=\\\"{\\n                    'is-invalid': skill.get('level').invalid && (skill.get('level').dirty || skill.get('level').touched || signUpForm.submitted),\\n    \\n                    'is-valid': skill.get('level').valid && (skill.get('level').dirty || skill.get('level').touched || signUpForm.submitted) }\\\">\\n                    <option value=\\\"null\\\">Please Select</option>\\n                    <option value=\\\"Beginner\\\">Beginner</option>\\n                    <option value=\\\"Intermediate\\\">Intermediate</option>\\n                    <option value=\\\"Professional\\\">Professional</option>\\n                    <option value=\\\"Expert\\\">Expert</option>\\n                  </select>\\n                </div>\\n\\n                <div class=\\\"col-3\\\">\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onRemoveClick(i)\\\">Remove</button>\\n                </div>\\n              </div>\\n\\n              <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onAddSkill()\\\">Add Skill</button>\\n            </div>\\n\\n          </div>\\n\\n          <!-- {{signUpForm.value | json}} -->\\n        </div>\\n\\n        <div class=\\\"card-footer\\\">\\n          <button class=\\\"btn btn-success float-right\\\">Create Account</button>\\n          <div class=\\\"text-danger\\\">{{registerError}}</div>\\n        </div>\\n\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { CountriesService } from '../../services/countries.service';\nimport { Country } from '../../models/country';\nimport { CustomValidatorsService } from '../../services/custom-validators.service';\nimport { SignUpViewModel } from '../../models/sign-up-view-model';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\nimport { CanComponentDeactivate } from '../../guards/can-deactivate-guard.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit, CanComponentDeactivate\n{\n  signUpForm: FormGroup;\n  genders = [\"male\", \"female\"];\n  countries: Country[] = [];\n  registerError: string = null;\n\n  canLeave: boolean = true;\n\n  constructor(private countriesService: CountriesService, private formBuilder: FormBuilder, private customValidatorsService: CustomValidatorsService, private loginService: LoginService, private router: Router)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.countriesService.getCountries().subscribe((response) =>\n    {\n      this.countries = response;\n    });\n\n    this.signUpForm = this.formBuilder.group({\n      personName: this.formBuilder.group({\n        firstName: [null, [Validators.required, Validators.minLength(2)]],\n        lastName: [null, [Validators.required, Validators.minLength(2)]],\n      }),\n\n      email: [null, [Validators.required, Validators.email], [ this.customValidatorsService.DuplicateEmailValidator() ], {updateOn: 'blur'}],\n      mobile: [null, [Validators.required, Validators.pattern(/^[789]\\d{9}$/)]],\n      dateOfBirth: [null, [Validators.required, this.customValidatorsService.minimumAgeValidator(18)]],\n      password: [null, [Validators.required]],\n      confirmPassword: [null, [Validators.required]],\n      gender: [null, [Validators.required]],\n      countryID: [null, [Validators.required]],\n      receiveNewsLetters: [null],\n      skills: this.formBuilder.array([])\n    },\n      {\n        validators: [\n          this.customValidatorsService.compareValidator(\"confirmPassword\", \"password\")\n        ]\n      });\n\n    this.signUpForm.valueChanges.subscribe((value) =>\n    {\n      //console.log(value);\n      this.canLeave = false;\n    });\n  }\n\n  onSubmitClick()\n  {\n    //Display current form value\n    this.signUpForm[\"submitted\"] = true;\n    console.log(this.signUpForm);\n\n    if (this.signUpForm.valid)\n    {\n      var signUpViewModel = this.signUpForm.value as SignUpViewModel;\n      this.loginService.Register(signUpViewModel).subscribe(\n        (response) =>\n        {\n          this.canLeave = true;\n          this.router.navigate([\"/employee\", \"tasks\"]);\n        },\n        (error) =>\n        {\n          console.log(error);\n          this.registerError = \"Unable to submit\";\n        });\n    }\n\n    //setValue\n    // this.signUpForm.setValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\",\n    //   mobile: \"9876543210\",\n    //   dateOfBirth: \"2020-01-01\",\n    //   gender: \"male\",\n    //   countryID: 3,\n    //   receiveNewsLetters: true\n    // });\n\n    //patchValue\n    // this.signUpForm.patchValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n\n    //reset\n    //this.signUpForm.reset();\n\n    //reset with Parameters\n    // this.signUpForm.reset({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n  }\n\n  onAddSkill()\n  {\n    var formGroup = new FormGroup({\n      skillName: new FormControl(null, [Validators.required]),\n      skillLevel: new FormControl(null, [Validators.required])\n    });\n\n    (<FormArray>this.signUpForm.get(\"skills\")).push(formGroup);\n  }\n\n  onRemoveClick(index: number)\n  {\n    (<FormArray>this.signUpForm.get(\"skills\")).removeAt(index);\n  }\n}\n","import { Directive, ElementRef, Input, HostListener, HostBinding, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective\n{\n  @Input(\"error\") error: string;\n  @HostBinding(\"title\") title: string;\n\n  constructor(private elementRef: ElementRef, private renderer2 : Renderer2)\n  {\n  }\n\n  divElement: any;\n  spanElement: any;\n  spanText: any;\n\n  ngOnInit()\n  {\n    /* div */\n    this.divElement = this.renderer2.createElement(\"div\"); //<div></div>\n\n    this.renderer2.setAttribute(this.divElement, \"role\", \"alert\"); //<div role=\"alert\"> </div>\n\n    this.renderer2.setAttribute(this.divElement, \"class\", \"alert alert-danger fade show\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\"> </div>\n\n    this.renderer2.setStyle(this.divElement, \"transition\", \"transform 0.5s\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> </div>\n\n    /* span */\n    this.spanElement = this.renderer2.createElement(\"span\");\n    this.renderer2.setAttribute(this.spanElement, \"class\", \"message\");\n    //<span class=\"message\"></span>\n\n    /* spanText */\n    this.spanText = this.renderer2.createText(this.error);\n    this.renderer2.appendChild(this.spanElement, this.spanText);\n    //<span class=\"message\">${this.error}</span>\n\n    this.renderer2.appendChild(this.divElement, this.spanElement);\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> <span class=\"message\">${this.error}</span> </div>\n\n    this.elementRef.nativeElement.appendChild(this.divElement);\n\n    this.title = \"Please try again!\";\n  }\n\n  @HostListener(\"mouseenter\", [ \"$event\" ])\n  onMouseEnter(event)\n  {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1.1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1.1)\");\n  }\n\n  @HostListener(\"mouseleave\", [ \"$event\" ])\n  onMouseLeave()\n  {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1)\");\n  }\n}\n\n\n","import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [ { provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator\n{\n  constructor()\n  {\n  }\n\n  validate(control: AbstractControl) : ValidationErrors | null\n  {\n    let isValid = true;\n    if (control.value.ClientLocation == 6 && control.value.Status == \"Support\")\n    {\n      isValid = false; //indicates invalid\n    }\n\n    if (isValid == true)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { clientLocationStatus: { valid: false }}; //invalid\n    }\n  }\n\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appComponentLoader]'\n})\nexport class ComponentLoaderDirective\n{\n  constructor(public viewContainerRef: ViewContainerRef)\n  {\n  }\n}\n\n","import { Directive } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, AsyncValidator, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ProjectsService } from './../services/projects.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Project } from './../models/project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers: [ { provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }]\n})\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator\n{\n  constructor(private projectsService: ProjectsService)\n  {\n  }\n\n  validate(control: AbstractControl) : Observable<ValidationErrors | null>\n  {\n    return this.projectsService.getProjectByProjectID(control.value).pipe(map( (existingProject: Project) => {\n      if (existingProject != null)\n      {\n        return { uniqueProjectID: { valid: false }};\n      }\n      else\n      {\n        return null;\n      }\n    }));\n  }\n}\n","import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appRepeater]'\n})\nexport class RepeaterDirective\n{\n  @Input(\"appRepeater\") n: number;\n\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>)\n  {\n    this.viewContainerRef.clear();\n  }\n\n  ngOnInit()\n  {\n    for (let i = 0; i < this.n; i++)\n    {\n      this.viewContainerRef.createEmbeddedView(this.templateRef, { $implicit: i});\n    }\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, ValidationErrors, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [ {provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }]\n})\nexport class TeamSizeValidatorDirective implements Validator\n{\n  constructor()\n  {\n  }\n\n  @Input(\"appTeamSizeValidator\") n : number;\n  \n  validate(control: AbstractControl) : ValidationErrors | null\n  {\n    let currentValue = control.value;\n    let isValid = currentValue % this.n == 0;\n\n    if (isValid)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { divisible: { valid: false } }; //indicates invalid\n    }\n  }\n\n}\n","module.exports = \"<h1>Create Task</h1>\\n<form [formGroup]=\\\"newTaskForm\\\" novalidate=\\\"novalidate\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"taskName\\\" class=\\\"text-infor\\\" style=\\\"font-size:18px\\\">Task Name:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"taskName\\\" placeholder=\\\"Task Name\\\" style=\\\"font-size:20px\\\" autofocus=\\\"autofocus\\\" formControlName=\\\"taskName\\\">\\n\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"newTaskForm.get('taskName').invalid && (newTaskForm.get('taskName').dirty || newTaskForm.get('taskName').touched || newTaskForm.submitted) && newTaskForm.get('taskName').errors?.required\\\">Task Name can't be blank</span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"description\\\" class=\\\"text-info\\\">Description:</label>\\n        <textarea class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"form-group form-row\\\">\\n        <label for=\\\"projectID\\\" class=\\\"text-info col-md-3 col-form-label\\\">Project:</label>\\n        <div class=\\\"col-md-9\\\">\\n          <select class=\\\"form-control\\\" id=\\\"projectID\\\" formControlName=\\\"projectID\\\">\\n            <option value=\\\"null\\\">Please Select</option>\\n\\n            <option *ngFor=\\\"let project of projects | async\\\" [value]=\\\"project.projectID\\\">\\n              {{project.projectName}}\\n            </option>\\n          </select>\\n\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"newTaskForm.get('projectID').invalid && (newTaskForm.get('projectID').dirty || newTaskForm.get('projectID').touched || newTaskForm.submitted) && newTaskForm.get('projectID').errors?.required\\\">Please select project, to which the task belongs to.</span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group form-row\\\">\\n        <label for=\\\"assignedTo\\\" class=\\\"text-info col-md-3 col-form-label\\\">Assigned To:</label>\\n        <div class=\\\"col-md-9\\\">\\n          <select class=\\\"form-control\\\" id=\\\"assignedTo\\\" formControlName=\\\"assignedTo\\\">\\n            <option value=\\\"null\\\">Please Select</option>\\n\\n            <option [value]=\\\"employee.id\\\" *ngFor=\\\"let employee of employees | async\\\">\\n              {{employee.userName}}\\n            </option>\\n          </select>\\n\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"newTaskForm.get('assignedTo').invalid && (newTaskForm.get('assignedTo').dirty || newTaskForm.get('assignedTo').touched || newTaskForm.submitted) && newTaskForm.get('assignedTo').errors?.required\\\">Select the employee, to whom the task id assigned.</span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"form-group form-row\\\">\\n        <label for=\\\"taskPriorityID\\\" class=\\\"text-info col-md-3 col-form-label\\\">Priority:</label>\\n        <div class=\\\"col-md-9\\\">\\n          <select class=\\\"form-control\\\" id=\\\"taskPriorityID\\\" formControlName=\\\"taskPriorityID\\\">\\n            <option value=\\\"null\\\">Please Select</option>\\n\\n            <option [value]=\\\"taskPriority.taskPriorityID\\\" *ngFor=\\\"let taskPriority of taskPriorities | async\\\">\\n              {{taskPriority.taskPriorityName}}\\n            </option>\\n          </select>\\n\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"newTaskForm.get('taskPriorityID').invalid && (newTaskForm.get('taskPriorityID').dirty || newTaskForm.get('taskPriorityID').touched || newTaskForm.taskPriorityID) && newTaskForm.get('taskPriorityID').errors?.required\\\">Select the employee, to whom the task id assigned.</span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group form-row\\\">\\n          <label for=\\\"taskStatus\\\" class=\\\"text-info col-md-3 col-form-label\\\">Status:</label>\\n          <div class=\\\"col-md-9\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control-plaintext\\\" id=\\\"taskStatus\\\" placeholder=\\\"Task Status\\\" value=\\\"Holding\\\" readonly=\\\"readonly\\\">\\n          </div>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"col-lg-12 border-top text-center\\\">\\n      <div>\\n        <button class=\\\"btn btn-success btn-lg mt-2\\\" (click)=\\\"onCreateTaskClick($event)\\\">Create Task</button>\\n      </div>\\n      <a class=\\\"btn btn-info btn-sm mt-1\\\" [routerLink]=\\\" [ '/employee', 'tasks' ] \\\">Back to Tasks</a>\\n    </div>\\n\\n  </div>\\n</form>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2NvbXBvbmVudHMvY3JlYXRlLXRhc2svY3JlYXRlLXRhc2suY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { TaskPriority } from 'src/app/models/task-priority';\nimport { TasksService } from 'src/app/services/tasks.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { Router } from '@angular/router';\nimport { TaskPrioritiesService } from 'src/app/services/task-priorities.service';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.scss']\n})\nexport class CreateTaskComponent implements OnInit\n{\n  newTaskForm: FormGroup;\n  projects: Observable<Project[]>;\n  employees: Observable<any>;\n  taskPriorities: Observable<TaskPriority[]>;\n  \n  constructor(private tasksService: TasksService, private router: Router, private projectsService: ProjectsService, private taskPrioritiesService: TaskPrioritiesService, private loginService: LoginService)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.newTaskForm = new FormGroup({\n      taskID: new FormControl(0),\n      taskName: new FormControl(null, [ Validators.required ]),\n      description: new FormControl(null, []),\n      projectID: new FormControl(null, [ Validators.required ]),\n      assignedTo: new FormControl(null, [ Validators.required ]),\n      taskPriorityID: new FormControl(2, [ Validators.required ])\n    });\n\n    this.projects = this.projectsService.getAllProjects();\n    this.employees = this.loginService.getAllEmployes();\n    this.taskPriorities = this.taskPrioritiesService.getTaskPriorities();\n  }\n\n  onCreateTaskClick(event)\n  {\n    this.newTaskForm[\"submitted\"] = true;\n\n    if (this.newTaskForm.valid)\n    {\n      this.tasksService.insertTask(this.newTaskForm.value).subscribe(() => {\n        this.router.navigate( [ \"/employee\", \"tasks\" ]);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n    else\n    {\n      console.log(this.newTaskForm.errors);\n    }\n  }\n}\n","module.exports = \"<p>\\n  edit-task works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2NvbXBvbmVudHMvZWRpdC10YXNrL2VkaXQtdGFzay5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.scss']\n})\nexport class EditTaskComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1>Tasks</h1>\\n<a [routerLink]=\\\" [ '/employee', 'createtask' ] \\\" class=\\\"btn btn-primary\\\">Create Task</a>\\n\\n<div class=\\\"row mt-1 mb-2\\\">\\n\\n    <div class=\\\"col-lg-6 mb-1\\\" *ngFor=\\\"let taskGroup of taskGroups\\\">\\n        <div class=\\\"card card-primary\\\">\\n\\n            <div class=\\\"card-header\\\" [ngClass]=\\\"getTaskGroupBgCssClass(taskGroup.taskStatusName)\\\">\\n                <div class=\\\"card-title\\\">\\n                    <h4>\\n                        {{taskGroup.taskStatusName}}\\n                        <span class=\\\"badge badge-warning float-right\\\">\\n                            {{taskGroup.tasks.length}}\\n                        </span>\\n                    </h4>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n\\n                <div class=\\\"card mb-1\\\" *ngFor=\\\"let task of taskGroup.tasks; let i = index\\\">\\n\\n                    <div class=\\\"card-header\\\">\\n                        #{{i + 1}} &nbsp;&nbsp; {{task.taskName}}\\n\\n                        <div class=\\\"badge float-right mr-1\\\" style=\\\"font-size:15px\\\" [ngClass]=\\\"getTaskPriorityBadgeCssClass(task.taskPriority?.taskPriorityName)\\\">\\n                            {{task.taskPriority?.taskPriorityName}}\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                        <div>{{task.description}}</div>\\n\\n                        <div>\\n                            <table class=\\\"table table-sm table-borderless\\\">\\n                                <tr>\\n                                    <td>Created:</td>\\n                                    <td>\\n                                        <i class=\\\"fa fa-user\\\"></i>\\n                                        {{task.createdByUser?.userName}}\\n                                        &nbsp;&nbsp;&nbsp;\\n                                        <i class=\\\"fa fa-calendar\\\"></i>\\n                                        {{task.createdOnString}}\\n                                    </td>\\n                                </tr>\\n\\n                                <tr>\\n                                    <td>Assigned to:</td>\\n                                    <td>\\n                                        <i class=\\\"fa fa-user-o\\\"></i>\\n                                        {{task.assignedToUser?.userName}}\\n                                    </td>\\n                                </tr>\\n\\n                                <tr>\\n                                    <td>Project:</td>\\n                                    <td>\\n                                        <i class=\\\"fa fa-briefcase\\\"></i>\\n                                        {{task.project?.projectName}} -\\n                                        {{task.project?.clientLocation?.clientLocationName}}\\n                                    </td>\\n                                </tr>\\n                            </table>\\n\\n                            <table class=\\\"table table-sm table-bordered\\\">\\n                                <thead class=\\\"table-light\\\">\\n                                    <th>Date</th>\\n                                    <th>Status</th>\\n                                    <th>User</th>\\n                                    <th>Description</th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let taskStatusDetail of task.taskStatusDetails\\\">\\n                                        <td>\\n                                            <i class=\\\"fa fa-calendar\\\"></i>\\n                                            {{taskStatusDetail?.statusUpdationDateTimeString}}\\n                                        </td>\\n                                        <td class=\\\"text-primary\\\" [ngClass]=\\\"getTaskGroupTextCssClass(taskStatusDetail?.taskStatus?.taskStatusName)\\\">\\n                                            {{taskStatusDetail?.taskStatus?.taskStatusName}}\\n                                        </td>\\n                                        <td>\\n                                            <i class=\\\"fa fa-user\\\"></i>\\n                                            {{taskStatusDetail?.user?.userName}}\\n                                        </td>\\n                                        <td>\\n                                            {{taskStatusDetail?.description}}\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"btn-group\\\">\\n                            <a [routerLink]=\\\" [ '/employee', 'updatetaskstatus', task.taskID ] \\\" class=\\\"btn btn-sm btn-outline-secondary\\\">\\n                                <i class=\\\"fa fa-pencil\\\"></i>\\n                                Change Status\\n                            </a>\\n\\n                            <a [routerLink]=\\\" [ '/employee', 'edittask', task.taskID ] \\\" class=\\\"btn btn-sm btn-outline-secondary\\\" *ngIf=\\\"task.createdByUser?.userName == loginService.currentUserName\\\">\\n                                <i class=\\\"fa fa-pencil-square-o\\\"></i>\\n                                Edit\\n                            </a>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2NvbXBvbmVudHMvdGFza3MvdGFza3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { TasksService } from '../../../services/tasks.service';\nimport { LoginService } from '../../../services/login.service';\nimport { GroupedTask } from '../../../models/grouped-task';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit\n{\n  taskGroups: GroupedTask[];\n\n  constructor(private tasksService: TasksService, public loginService: LoginService)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.tasksService.getTasks().subscribe((response) => {\n      this.taskGroups = response;\n    });\n  }\n\n  /* Get background color based on task status */\n  getTaskGroupBgCssClass(taskStatusName) : string\n  {\n    var className;\n    switch (taskStatusName)\n    {\n      case \"Holding\": className = \"bg-secondary text-white\"; break;\n      case \"Prioritized\": className = \"bg-primary text-white\"; break;\n      case \"Started\": className = \"bg-info text-white\"; break;\n      case \"Finished\": className = \"bg-success text-white\"; break;\n      case \"Reverted\": className = \"bg-danger text-white\"; break;\n    }\n    return className;\n  }\n\n  /* Get background color based on task priority */\n  getTaskPriorityBadgeCssClass(taskPriorityName) : string\n  {\n    var className;\n    switch (taskPriorityName)\n    {\n      case \"Urgent\": className = \"badge-danger\"; break;\n      case \"Normal\": className = \"badge-primary\"; break;\n      case \"Below Normal\": className = \"badge-info\"; break;\n      case \"Low\": className = \"badge-secondary\"; break;\n    }\n    return className;\n  }\n\n  /* Get text color based on task status */\n  getTaskGroupTextCssClass(taskStatusName) : string\n  {\n    var className;\n    switch (taskStatusName)\n    {\n      case \"Holding\": className = \"text-secondary\"; break;\n      case \"Prioritized\": className = \"text-primary\"; break;\n      case \"Started\": className = \"text-info\"; break;\n      case \"Finished\": className = \"text-success\"; break;\n      case \"Reverted\": className = \"text-danger\"; break;\n    }\n    return className;\n  }\n}\n","module.exports = \"<h1>Update Task Status</h1>\\n<form [formGroup]=\\\"editTaskStatusForm\\\" novalidate=\\\"novalidate\\\">\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-12\\\">\\n      <table class=\\\"table table-sm table-borderless\\\">\\n        <tr>\\n          <td style=\\\"width:65px\\\">Created:</td>\\n          <td>\\n            <i class=\\\"fa fa-user\\\"></i>\\n            {{currentTask.createdByUser?.userName}}\\n            &nbsp;&nbsp;&nbsp;\\n            <i class=\\\"fa fa-calendar\\\"></i>\\n            {{currentTask.createdOnString}}\\n          </td>\\n\\n          <td class=\\\"text-right\\\">Last Updated on:</td>\\n          <td>\\n            <i class=\\\"fa fa-calendar-check-o\\\"></i>\\n            {{currentTask.lastUpdatedOnString}}\\n          </td>\\n        </tr>\\n      </table>\\n    </div>\\n\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"description\\\" class=\\\"text-info\\\">Description:</label>\\n        <textarea class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-6\\\">\\n\\n      <div class=\\\"form-group form-row\\\">\\n        <label for=\\\"taskStatusID\\\" class=\\\"text-info col-md-3 col-form-label\\\">Status:</label>\\n        <div class=\\\"col-md-9\\\">\\n          <select class=\\\"form-control\\\" id=\\\"taskStatusID\\\" formControlName=\\\"taskStatusID\\\">\\n            <option value=\\\"null\\\">Please Select</option>\\n\\n            <option *ngFor=\\\"let taskStatus of taskStatuses | async\\\" [value]=\\\"taskStatus.taskStatusID\\\">\\n              {{taskStatus.taskStatusName}}\\n            </option>\\n          </select>\\n\\n          <span class=\\\"text-danger\\\" *ngIf=\\\"editTaskStatusForm.get('taskStatusID').invalid && (editTaskStatusForm.get('taskStatusID').dirty || editTaskStatusForm.get('taskStatusID').touched || editTaskStatusForm.submitted) && editTaskStatusForm.get('taskStatusID').errors?.required\\\">\\n            Please select current task status\\n          </span>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-lg-12 border-top text-center\\\">\\n      <div>\\n        <button class=\\\"btn btn-success btn-lg mt-2\\\" (click)=\\\"onUpdateTaskStatusClick($event)\\\">Update Task Status</button>\\n      </div>\\n      <div>\\n        <a [routerLink]=\\\" [ '/employee', 'tasks' ] \\\" class=\\\"btn btn-info btn-sm mt-1\\\">Back to Tasks</a>\\n      </div>\\n    </div>\\n\\n  </div>\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2NvbXBvbmVudHMvdXBkYXRlLXRhc2stc3RhdHVzL3VwZGF0ZS10YXNrLXN0YXR1cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../../../models/task';\nimport { TaskStatusDetail } from '../../../models/TaskStatusDetail';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TaskStatus } from '../../../models/task-status';\nimport { Observable } from 'rxjs';\nimport { TasksService } from '../../../services/tasks.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TaskStatusesService } from '../../../services/task-statuses.service';\n\n@Component({\n  selector: 'app-update-task-status',\n  templateUrl: './update-task-status.component.html',\n  styleUrls: ['./update-task-status.component.scss']\n})\nexport class UpdateTaskStatusComponent implements OnInit\n{\n  //Properties to represent taskstatusdetails\n  taskID: number;\n  currentTask: Task = new Task();\n  currentTaskStatusDetail: TaskStatusDetail = new TaskStatusDetail();\n  editTaskStatusForm: FormGroup;\n  taskStatuses: Observable<TaskStatus[]>;\n\n  constructor(private tasksService: TasksService, private router: Router, private taskStatuesService: TaskStatusesService, private activatedRoute: ActivatedRoute)\n  {\n  }\n\n  ngOnInit()\n  {\n    //Receive taskid parameter\n    this.activatedRoute.params.subscribe((params) =>\n    {\n      this.taskID = params[\"taskid\"];\n    });\n\n    //Create reactive form\n    this.editTaskStatusForm = new FormGroup({\n      thisStatusDetailID: new FormControl(0),\n      taskID: new FormControl(null),\n      taskStatusID: new FormControl(null, [ Validators.required ]),\n      description: new FormControl(null)\n    });\n\n    //get taskstatuses from db for dropdownlist\n    this.taskStatuses = this.taskStatuesService.getTaskStatuses();\n\n    //get task by taskid\n    this.tasksService.getTaskByTaskID(this.taskID).subscribe((task: Task) =>\n    {\n      this.currentTask = task;\n\n      //Load task details into Reactive form\n      this.currentTaskStatusDetail.taskID = this.taskID;\n      this.currentTaskStatusDetail.description = null;\n      this.currentTaskStatusDetail.taskStatusID = task.currentTaskStatusID;\n      this.currentTaskStatusDetail.taskStatusDetailID = 0;\n      this.editTaskStatusForm.patchValue(this.currentTaskStatusDetail);\n    });\n  }\n\n  onUpdateTaskStatusClick(event)\n  {\n    this.editTaskStatusForm[\"submitted\"] = true;\n\n    if (this.editTaskStatusForm.valid)\n    {\n      //send REST-API call to server\n      this.tasksService.updateTaskStatus(this.editTaskStatusForm.value).subscribe((response) => {\n        this.router.navigate( [ \"/employee\", \"tasks\" ]);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n    else\n    {\n      console.log(this.editTaskStatusForm.errors);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanActivateGuardService } from '../../guards/can-activate-guard.service';\nimport { TasksComponent } from '../components/tasks/tasks.component';\nimport { CreateTaskComponent } from '../components/create-task/create-task.component';\nimport { EditTaskComponent } from '../components/edit-task/edit-task.component';\nimport { UpdateTaskStatusComponent } from '../components/update-task-status/update-task-status.component';\n\nconst routes: Routes = [\n  { path: \"\", canActivate: [ CanActivateGuardService ], data: { expectedRole: \"Employee\" }, children: [\n    { path: \"tasks\", component: TasksComponent, data: { linkIndex: 1 } },\n    { path: \"createtask\", component: CreateTaskComponent, data: { linkIndex: 2 } },\n    { path: \"edittask/:taskid\", component: EditTaskComponent, data: { linkIndex: 3 } },\n    { path: \"updatetaskstatus/:taskid\", component: UpdateTaskStatusComponent, data: { linkIndex: 4 } },\n  ]},\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [ RouterModule ]\n})\nexport class EmployeeRoutingModule { }\n\n","import { NgModule } from '@angular/core';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { EmployeeRoutingModule } from './employee-routing/employee-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CreateTaskComponent } from './components/create-task/create-task.component';\nimport { EditTaskComponent } from './components/edit-task/edit-task.component';\nimport { UpdateTaskStatusComponent } from './components/update-task-status/update-task-status.component';\n\n@NgModule({\n  declarations: [\n    TasksComponent,\n    CreateTaskComponent,\n    EditTaskComponent,\n    UpdateTaskStatusComponent,\n  ],\n  imports: [\n    SharedModule,\n    EmployeeRoutingModule\n  ],\n  exports:\n  [\n    TasksComponent,\n    CreateTaskComponent,\n    EditTaskComponent,\n    UpdateTaskStatusComponent,\n  ]\n})\nexport class EmployeeModule { }\n","import { Injectable } from '@angular/core';\nimport { LoginService } from './../services/login.service';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGuardService implements CanActivate\n{\n  constructor(private loginService : LoginService, private router : Router, private jwtHelperService : JwtHelperService)\n  {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot) : boolean\n  {\n    //console.log(this.router.url);\n    var token = sessionStorage.getItem(\"currentUser\")? JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role == route.data.expectedRole)\n    {\n      return true; //the user can navigate to the particular route\n    }\n    else\n    {\n      this.router.navigate([ \"login\" ]);\n      return false; //the user can't navigate to the particular route\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\n\nexport interface CanComponentDeactivate\n{\n  canLeave: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanDeactivateGuardService implements CanDeactivate<CanComponentDeactivate>\n{\n  canDeactivate(component: CanComponentDeactivate)\n  {\n    if (component.canLeave == true)\n    {\n      return true; //user can leave the current route\n    }\n    else\n    {\n      return confirm(\"Do you want to discard changes?\");\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor\n{\n  constructor()\n  {\n  }\n\n  intercept(request : HttpRequest<any>, next : HttpHandler) : Observable<HttpEvent<any>>\n  {\n    var currentUser = { token: \"\" };\n    if (sessionStorage.currentUser != null)\n    {\n      currentUser = JSON.parse(sessionStorage.currentUser);\n    }\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: \"Bearer \" + currentUser.token\n      }}\n    );\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor\n{\n  constructor()\n  {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    return next.handle(request).pipe(tap(\n\n      (event: HttpEvent<any>) =>\n      {\n        if (event instanceof HttpResponse)\n        {\n          //do something with response\n        }\n      },\n\n      (error: any) =>\n      {\n        if (error instanceof HttpErrorResponse)\n        {\n          if (error.status == 401)\n          {\n            console.log(error);\n            alert(\"401 UnAuthorized\");\n          }\n        }\n      }\n\n    ));\n  }\n}\n\n\n","import { TaskStatus } from './task-status';\r\n\r\nexport class TaskStatusDetail\r\n{\r\n    taskStatusDetailID: number;\r\n    taskID: number;\r\n    taskStatusID: number;\r\n    userID: string;\r\n    description: string;\r\n    taskstatus: TaskStatus;\r\n    user: any;\r\n    statsUpdationDateTimeString: string;\r\n\r\n    constructor()\r\n    {\r\n        this.taskStatusDetailID = null;\r\n        this.taskID = null;\r\n        this.taskStatusID = null;\r\n        this.description = null;\r\n        this.userID = null;\r\n        this.taskstatus = null;\r\n        this.user = null;\r\n        this.statsUpdationDateTimeString = null;\r\n    }\r\n}","export class LoginViewModel\n{\n    UserName: string;\n    Password: string;\n}\n","import { Project } from './project';\n\nexport class Task\n{\n    taskID: number;\n    taskName: string;\n    description: string;\n    createdOn: string;\n    projectID: number;\n    createdBy: string;\n    assignedTo: string;\n    taskPriorityID: number;\n    lastUpdatedOn: number;\n    currentStatus: number;\n    currentTaskStatusID: number;\n\n    project: Project;\n    createdByUser: any;\n    assignedToUser: any;\n    taskStatusDetails: any;\n\n    constructor()\n    {\n        this.taskID = null;\n        this.taskName = null;\n        this.description = null;\n        this.createdOn = null;\n        this.projectID = null;\n        this.createdBy = null;\n        this.assignedTo = null;\n        this.taskPriorityID = null;\n        this.lastUpdatedOn = null;\n        this.currentStatus = null;\n\n        this.project = null;\n        this.createdByUser = null;\n        this.assignedToUser = null;\n        this.taskStatusDetails = null;\n        this.taskStatusDetails = null;\n        this.currentTaskStatusID = null;\n    }\n}\n","import { trigger, transition, query, style, animate, group, keyframes } from \"@angular/animations\";\r\n\r\nexport const fadeAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ opacity: 0 }),\r\n                    animate(\"0.6s\", style({ opacity: '1' }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ opacity: 1 }),\r\n                    animate(\"0.6s\", style({ opacity: '0' }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\nexport const slideUpAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ transform: \"translateY(100%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"translateY(0%)\" }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ transform: \"translateY(0%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"translateY(-100%)\" }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\nexport const zoomUpAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ transform: \"scale(0) translateY(100%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"scale(1) translateY(0%)\" }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ transform: \"scale(1) translateY(0%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"scale(0) translateY(-100%)\" }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\n\r\nexport const zoomLeftAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ transform: \"scale(0) translateX(100%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"scale(1) translateX(0%)\" }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ transform: \"scale(1) translateX(0%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"scale(0) translateX(-100%)\" }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\n\r\n\r\nfunction slideLeft()\r\n{\r\n    return [\r\n        query(\":enter, :leave\",\r\n            style({ position: 'absolute', width: '98%' }),\r\n            { optional: true }),\r\n\r\n        group([\r\n\r\n            query(\":enter\", [\r\n                style({ transform: \"translateX(100%)\" }),\r\n                animate(\"0.6s\", style({ transform: \"translateX(0%)\" }))\r\n            ], { optional: true }),\r\n\r\n            query(\":leave\", [\r\n                style({ transform: \"translateX(0%)\" }),\r\n                animate(\"0.6s\", style({ transform: \"translateX(-100%)\" }))\r\n            ], { optional: true })\r\n\r\n        ])\r\n    ];\r\n}\r\n\r\nfunction slideRight()\r\n{\r\n    return [\r\n        query(\":enter, :leave\",\r\n            style({ position: 'absolute', width: '98%' }),\r\n            { optional: true }),\r\n\r\n        group([\r\n\r\n            query(\":enter\", [\r\n                style({ transform: \"translateX(-100%)\" }),\r\n                animate(\"0.6s\", style({ transform: \"translateX(0%)\" }))\r\n            ], { optional: true }),\r\n\r\n            query(\":leave\", [\r\n                style({ transform: \"translateX(0%)\" }),\r\n                animate(\"0.6s\", style({ transform: \"translateX(100%)\" }))\r\n            ], { optional: true })\r\n\r\n        ])\r\n    ];\r\n}\r\n\r\n\r\nexport const slideLeftOrRightAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"0 => 1\", slideLeft()),\r\n        transition(\"0 => 2\", slideLeft()),\r\n        transition(\"0 => 3\", slideLeft()),\r\n        transition(\"0 => 4\", slideLeft()),\r\n        transition(\"0 => 5\", slideLeft()),\r\n        transition(\"0 => 6\", slideLeft()),\r\n\r\n        transition(\"1 => 0\", slideRight()),\r\n        transition(\"1 => 2\", slideLeft()),\r\n        transition(\"1 => 3\", slideLeft()),\r\n        transition(\"1 => 4\", slideLeft()),\r\n        transition(\"1 => 5\", slideLeft()),\r\n        transition(\"1 => 6\", slideLeft()),\r\n\r\n        transition(\"2 => 0\", slideRight()),\r\n        transition(\"2 => 1\", slideRight()),\r\n        transition(\"2 => 3\", slideLeft()),\r\n        transition(\"2 => 4\", slideLeft()),\r\n        transition(\"2 => 5\", slideLeft()),\r\n        transition(\"2 => 6\", slideLeft()),\r\n\r\n        transition(\"3 => 0\", slideRight()),\r\n        transition(\"3 => 1\", slideRight()),\r\n        transition(\"3 => 2\", slideRight()),\r\n        transition(\"3 => 4\", slideLeft()),\r\n        transition(\"3 => 5\", slideLeft()),\r\n        transition(\"3 => 6\", slideLeft()),\r\n\r\n        transition(\"4 => 0\", slideRight()),\r\n        transition(\"4 => 1\", slideRight()),\r\n        transition(\"4 => 2\", slideRight()),\r\n        transition(\"4 => 3\", slideRight()),\r\n        transition(\"4 => 5\", slideLeft()),\r\n        transition(\"4 => 6\", slideLeft()),\r\n\r\n        transition(\"5 => 0\", slideRight()),\r\n        transition(\"5 => 1\", slideRight()),\r\n        transition(\"5 => 2\", slideRight()),\r\n        transition(\"5 => 3\", slideRight()),\r\n        transition(\"5 => 4\", slideRight()),\r\n        transition(\"5 => 6\", slideLeft()),\r\n\r\n        transition(\"6 => 0\", slideRight()),\r\n        transition(\"6 => 1\", slideRight()),\r\n        transition(\"6 => 2\", slideRight()),\r\n        transition(\"6 => 3\", slideRight()),\r\n        transition(\"6 => 4\", slideRight()),\r\n        transition(\"6 => 5\", slideRight()),\r\n    ]);\r\n\r\n\r\nexport const keyFrameAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    animate(\"1s\", keyframes([\r\n                        style({ offset: 0, transform: \"scale(0.5) translateX(-100%)\", \"transform-origin\": \"center left\" }),\r\n                        style({ offset: 0.3, transform: \"scale(0.5) translateX(30%)\" }),\r\n                        style({ offset: 0.7, transform: \"scale(0.5) translateX(30%)\" }),\r\n                        style({ offset: 1, transform: \"scale(1) translateX(0%)\" })\r\n                    ])),\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    animate(\"1s\", keyframes([\r\n                        style({ offset: 0, transform: \"scale(1)\", \"transform-origin\": \"center right\" }),\r\n                        style({ offset: 0.3, transform: \"scale(0.5) translateX(0%)\" }),\r\n                        style({ offset: 0.7, transform: \"scale(0.5) translateX(0%)\" }),\r\n                        style({ offset: 1, transform: \"scale(1) translateX(100%)\" })\r\n                    ])),\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform\n{\n  transform(value: any[], searchBy: string, searchText: string): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let item of value)\n    {\n      if (String(item[searchBy]).toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\n      {\n        resultArray.push(item);\n      }\n    }\n\n    return resultArray;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberToWords'\n})\nexport class NumberToWordsPipe implements PipeTransform\n{\n  transform(value: any, separator: string = \", \"): any\n  {\n    if (value == null)\n    {\n      return null;\n    }\n    else\n    {\n      return this.inWords(value, separator);\n    }\n  }\n\n  private inWords = (n, separator) =>\n  {\n    let a = [\n      '', 'One', 'Two', 'Three', 'Four',\n      'Five', 'Six', 'Seven', 'Eight', 'Nine',\n      'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\n      'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n    ];\n\n    let b = [\n      '', '', 'Twenty', 'Thirty', 'Forty',\n      'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\n    ];\n\n    let g = [\n      '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\n      'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\n    ];\n\n    const arr = x => Array.from(x);\n    const num = x => Number(x) || 0;\n    const str = x => String(x);\n    const isEmpty = xs => xs.length === 0;\n    const take = n => xs => xs.slice(0, n);\n    const drop = n => xs => xs.slice(n);\n    const reverse = xs => xs.slice(0).reverse();\n    const comp = f => g => x => f(g(x));\n    const not = x => !x;\n    const chunk = n => xs =>\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk(n)(drop(n)(xs))];\n\n    let makeGroup = ([ones, tens, huns]) =>\n    {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' Hundred ',\n        num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n        a[tens + ones] || a[ones]\n      ].join('');\n    };\n\n    let thousand = (group, i) => group === '' ? group : `${group} ${g[i]}`;\n\n    if (typeof n === 'number')\n      return this.inWords(str(n), separator);\n    else if (n === '0')\n      return 'Zero';\n    else\n      return comp(chunk(3))(reverse)(arr(n))\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(separator);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './../models/project';\n\n@Pipe({\n  name: 'paging'\n})\nexport class PagingPipe implements PipeTransform\n{\n  transform(value: Project[], currentPageIndex: number, pageSize: number): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let i = currentPageIndex * pageSize; i < (currentPageIndex + 1) * pageSize; i++)\n    {\n      if (value[i])\n      {\n        resultArray.push(value[i]);\n      }\n    }\n    return resultArray;\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform\n{\n\n  transform(value: any[], sortBy: string, sortOrder: string): any\n  {\n    if (value == null)\n    {\n      return null;\n    }\n\n    value.sort(function(a, b) {\n      //less than 0        :   a comes before b\n      //greater than 0  :   b comes before a\n      //equal to 0         :   a and b are left unchanged\n\n      if (a[sortBy] && b[sortBy])\n      {\n        return a[sortBy].toString().toLowerCase()[0] - b[sortBy].toString().toLowerCase()[0];\n\n        //a = cat  --> 99\n        //b = dog --> 100\n        //99 - 100 = -1     --> less than 0        :   a comes before b\n      }\n      else\n      {\n        return 0;\n      }\n    });\n\n    if (sortOrder == \"DESC\")\n    {\n      value.reverse();\n    }\n\n    return value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Country } from './../models/country';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService\n{\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getCountries(): Observable<Country[]>\n  {\n    return this.httpClient.get<Country[]>(\"/api/countries\", { responseType: \"json\" });\n  }\n\n  getCountryByCountryID(CountryID: number): Observable<Country>\n  {\n    return this.httpClient.get<Country>(\"/api/countries/searchbycountryid/\" + CountryID, { responseType: \"json\" });\n  }\n\n  insertCountry(newCountry: Country): Observable<Country>\n  {\n    return this.httpClient.post<Country>(\"/api/countries\", newCountry, { responseType: \"json\" });\n  }\n\n  updateCountry(existingCountry: Country): Observable<Country>\n  {\n    return this.httpClient.put<Country>(\"/api/countries\", existingCountry, { responseType: \"json\" });\n  }\n\n  deleteCountry(CountryID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/countries?CountryID=\" + CountryID);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, FormGroup, AsyncValidatorFn } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService\n{\n  constructor(private loginService: LoginService)\n  {\n  }\n\n  public minimumAgeValidator(minAge: number): ValidatorFn\n  {\n    return (control: AbstractControl): ValidationErrors | null =>\n    {\n      if (!control.value)\n        return null; //return, if the date of birth is null\n\n      var today = new Date();\n      var dateOfBirth = new Date(control.value);\n      var diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\n      var diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\n\n      if (diffYears >= minAge)\n        return null; //valid\n      else\n        return { minAge: { valid: false } }; //invalid\n    };\n  }\n\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn\n  {\n    return (formGroup: FormGroup): ValidationErrors | null =>\n    {\n      if (!formGroup.get(controlToValidate).value)\n        return null; //return, if the confirm password is null\n\n      if (formGroup.get(controlToValidate).value == formGroup.get(controlToCompare).value)\n        return null; //valid\n      else\n      {\n        formGroup.get(controlToValidate).setErrors({ compareValidator: { valid: false } });\n        return { compareValidator: { valid: false } }; //invalid\n      }\n    };\n  }\n\n  public DuplicateEmailValidator(): AsyncValidatorFn\n  {\n    return (control: AbstractControl): Observable<ValidationErrors | null> =>\n    {\n      return this.loginService.getUserByEmail(control.value).pipe(map((existingUser: any) =>\n      {\n        if (existingUser != null)\n        {\n          return { uniqueEmail: { valid: false } }; //invalid\n        }\n        else\n        {\n          return null;\n        }\n      }));\n    };\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoginViewModel } from './../models/login-view-model';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { SignUpViewModel } from './../models/sign-up-view-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService\n{\n  private httpClient : HttpClient;\n\n  constructor(private httpBackend: HttpBackend, private jwtHelperService : JwtHelperService)\n  {\n  }\n\n  currentUserName: string  = null;\n  currentUserRole: string = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, { responseType: \"json\", observe: \"response\" })\n    .pipe(map(response => {\n      if (response)\n      {\n        this.currentUserName = response.body.userName;\n        this.currentUserRole = response.body.role;\n        sessionStorage.currentUser = JSON.stringify(response.body);\n        sessionStorage.XSRFRequestToken = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n      }\n      return response.body;\n    }));\n  }\n\n  public detectIfAlreadyLoggedIn()\n  {\n    if (this.jwtHelperService.isTokenExpired() == false)\n    {\n      var currentUser = JSON.parse(sessionStorage.currentUser);\n      this.currentUserName = currentUser.userName;\n      this.currentUserRole = currentUser.role;\n    }\n  }\n\n  public Register(signUpViewModel: SignUpViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/register\", signUpViewModel, { responseType: \"json\", observe: \"response\" })\n    .pipe(map(response => {\n      if (response)\n      {\n        this.currentUserName = response.body.userName;\n        sessionStorage.currentUser = JSON.stringify(response.body);\n        sessionStorage.XSRFRequestToken = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n      }\n      return response.body;\n    }));\n  }\n\n  getUserByEmail(Email: string): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getUserByEmail/\" + Email, { responseType: \"json\" });\n  }\n\n  public Logout()\n  {\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = null;\n  }\n\n  public isAuthenticated() : boolean\n  {\n    var token = sessionStorage.getItem(\"currentUser\")? JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\n    if (this.jwtHelperService.isTokenExpired())\n    {\n      return false; //token is not valid\n    }\n    else\n    {\n      return true; //token is valid\n    }\n  }\n\n  public getAllEmployes(): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getallemployees\", { responseType: \"json\" });\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, Observer, Subject, BehaviorSubject } from 'rxjs';\nimport { Project } from './../models/project';\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService\n{\n  public MySubject: BehaviorSubject<boolean>;\n\n  constructor(private httpClient: HttpClient)\n  {\n    this.MySubject = new BehaviorSubject<boolean>(false);\n  }\n\n  toggleDetails()\n  {\n    this.MySubject.next(!this.MySubject.value);\n  }\n\n  getAllProjects(): Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(\"/api/projects\", { responseType: \"json\" })\n      .pipe(map(\n        (data: Project[]) =>\n        {\n          for (let i = 0; i < data.length; i++)\n          {\n            //data[i].teamSize = data[i].teamSize * 100;\n          }\n          return data;\n        }\n      ));\n  }\n\n  getProjectByProjectID(ProjectID: number): Observable<Project>\n  {\n    return this.httpClient.get<Project>(\"/api/projects/searchbyprojectid/\" + ProjectID, { responseType: \"json\" });\n  }\n\n  insertProject(newProject: Project): Observable<Project>\n  {\n    var requestHeaders = new HttpHeaders();\n    requestHeaders = requestHeaders.set(\"X-XSRF-TOKEN\", sessionStorage.XSRFRequestToken);\n    return this.httpClient.post<Project>(\"/api/projects\", newProject, { headers: requestHeaders, responseType: \"json\" });\n  }\n\n  updateProject(existingProject: Project): Observable<Project>\n  {\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, { responseType: \"json\" });\n  }\n\n  deleteProject(ProjectID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/projects?ProjectID=\" + ProjectID);\n  }\n\n  SearchProjects(searchBy: string, searchText: string): Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(\"/api/projects/search/\" + searchBy + \"/\" + searchText, { responseType: \"json\" });\n  }\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpBackend, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterLoggerService\n{\n  private httpClient: HttpClient;\n  currentUserName: string = null;\n\n  constructor(private httpBackend: HttpBackend)\n  {\n  }\n\n  public log(logMsg: string): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post(\"/api/routerlogger\", logMsg,\n    { headers: new HttpHeaders().set(\"content-type\", \"text/plain\") }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskPriority } from '../models/task-priority';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskPrioritiesService\n{\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getTaskPriorities(): Observable<TaskPriority[]>\n  {\n    return this.httpClient.get<TaskPriority[]>(\"/api/taskpriorities\", { responseType: \"json\" });\n  }\n\n  getTaskPrioritytByTaskPriorityID(TaskPriorityID: number): Observable<TaskPriority>\n  {\n    return this.httpClient.get<TaskPriority>(\"/api/taskpriorities/searchbytaskpriorityid/\" + TaskPriorityID, { responseType: \"json\" });\n  }\n\n  insertTaskPriority(newTaskPriority: TaskPriority): Observable<TaskPriority>\n  {\n    return this.httpClient.post<TaskPriority>(\"/api/taskpriorities\", newTaskPriority, { responseType: \"json\" });\n  }\n\n  updateTaskPriority(existingTaskPriority: TaskPriority): Observable<TaskPriority>\n  {\n    return this.httpClient.put<TaskPriority>(\"/api/taskpriorities\", existingTaskPriority, { responseType: \"json\" });\n  }\n\n  deleteTaskPriority(TaskPriorityID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/taskpriorities?TaskPriorityID=\" + TaskPriorityID);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskStatus } from '../models/task-status';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskStatusesService\n{\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getTaskStatuses(): Observable<TaskStatus[]>\n  {\n    return this.httpClient.get<TaskStatus[]>(\"/api/taskstatuses\", { responseType: \"json\" });\n  }\n\n  getTaskStatusByTaskStatusID(TaskStatusID: number): Observable<TaskStatus>\n  {\n    return this.httpClient.get<TaskStatus>(\"/api/taskstatuses/searchbytaskstatusid/\" + TaskStatusID, { responseType: \"json\" });\n  }\n\n  insertTaskStatus(newTaskStatus: TaskStatus): Observable<TaskStatus>\n  {\n    return this.httpClient.post<TaskStatus>(\"/api/taskstatuses\", newTaskStatus, { responseType: \"json\" });\n  }\n\n  updateTaskStatus(existingTaskStatus: TaskStatus): Observable<TaskStatus>\n  {\n    return this.httpClient.put<TaskStatus>(\"/api/taskstatuses\", existingTaskStatus, { responseType: \"json\" });\n  }\n\n  deleteTaskStatus(TaskStatusID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/taskstatuses?TaskStatusID=\" + TaskStatusID);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Task } from '../models/task';\nimport { Observable } from 'rxjs';\nimport { GroupedTask } from '../models/grouped-task';\nimport { TaskStatusDetail } from '../models/TaskStatusDetail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService\n{\n  constructor(private httpClient: HttpClient)\n  {\n  }\n\n  getTasks() : Observable<GroupedTask[]>\n  {\n    return this.httpClient.get<GroupedTask[]>(\"/api/tasks\", { responseType: \"json\" });\n  }\n\n  getTaskByTaskID(TaskID: number) : Observable<Task>\n  {\n    return this.httpClient.get<Task>(\"/api/tasks/searchbytaskid/\" + TaskID, { responseType: \"json\" });\n  }\n\n  updateTaskStatus(taskStatusDetail: TaskStatusDetail) : Observable<TaskStatusDetail>\n  {\n    return this.httpClient.put<TaskStatusDetail>(\"/api/updatetaskstatus\", taskStatusDetail, { responseType: \"json\" });\n  }\n\n  insertTask(newTask: Task): Observable<Task>\n  {\n    return this.httpClient.post<Task>(\"/api/createtask\", newTask, { responseType: \"json\" });\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamSizeValidatorDirective } from '../directives/team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from '../directives/client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../directives/project-idunique-validator.directive';\nimport { NumberToWordsPipe } from '../pipes/number-to-words.pipe';\nimport { FilterPipe } from '../pipes/filter.pipe';\nimport { PagingPipe } from '../pipes/paging.pipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ComponentLoaderDirective } from '../directives/component-loader.directive';\nimport { SortPipe } from '../pipes/sort.pipe';\n\n@NgModule({\n  declarations: [\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    NumberToWordsPipe,\n    FilterPipe,\n    PagingPipe,\n    ComponentLoaderDirective,\n    SortPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    NumberToWordsPipe,\n    FilterPipe,\n    PagingPipe,\n    ComponentLoaderDirective,\n    SortPipe,\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}